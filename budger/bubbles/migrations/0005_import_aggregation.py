# Generated by Django 2.2.8 on 2019-12-20 07:44
from django.db import migrations, models
import django.db.models.deletion
from budger.bubbles.data.reg_projects import REG_PROJECTS
import re
import string


def aggregation_from_json(apps, schema_editor):
    Entity = apps.get_model('directory', 'Entity')
    Aggregation = apps.get_model('bubbles', 'Aggregation')

    queryset = REG_PROJECTS
    for p in queryset:

        for res in p['results']:
            memo = '{} / {}'.format(p['title_full'], res['name'])
            entity_inn = res['GRBS']
            entity = None
            entity_with_inn = Entity.objects.filter(inn=entity_inn)

            if entity_with_inn.count() == 1:
                entity = entity_with_inn.first()
            else:
                for obj in entity_with_inn:
                    if obj.kbk_title.upper() == obj.title_full.upper():
                        entity = obj

            if entity is None:
                print('Неправильный ИНН {} в задаче {} проекта {}'.format(entity_inn, res['id'], p['id']))
                continue

            years = range(2019, 2025)

            for year in years:
                Aggregation.objects.create(
                    memo=memo,
                    entity=entity,
                    year=year,
                    regproj_participant=True
                )


def aggregation_from_csv(apps, schema_editor):
    Entity = apps.get_model('directory', 'Entity')
    Aggregation = apps.get_model('bubbles', 'Aggregation')

    with open('2017-2019plan.csv', 'r', encoding='UTF-8') as f:
        file = f.read().split('\n')
        file.pop(0)
        file.pop(-1)

    for line in file:
        l = line.split(';')
        violations_count, violations_amount = l[4], l[5]
        year = l[1]
        memo = ' / '.join([l[0], l[3]])
        entity_titles = l[2].split('|')

        for entity_title in entity_titles:
            title_search = re.sub(r'[{}«»]'.format(string.punctuation), ' ', entity_title)
            title_search = re.sub(r'\s+', ' ', title_search)
            title_search = title_search.strip(' ').upper()

            entity = Entity.objects.filter(title_search__contains=title_search)
            if entity.count() == 0:
                print('!НЕ НАЙДЕНО: {}'.format(title_search))
                continue

            Aggregation.objects.create(
                violations_count=violations_count,
                violations_amount=violations_amount,
                memo=memo,
                entity=entity.first(),
                year=year,
                regproj_participant=False
            )


class Migration(migrations.Migration):
    dependencies = [
        ('bubbles', '0004_aggregation_1044'),
    ]

    operations = [
        migrations.AlterField(
            model_name='aggregation',
            name='violations_amount',
            field=models.BigIntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='aggregation',
            name='violations_count',
            field=models.BigIntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.RunPython(aggregation_from_json),
        migrations.RunPython(aggregation_from_csv),
    ]
